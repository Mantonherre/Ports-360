version: '3.8'

services:
  template_service:
    build: ./services/template_service
    container_name: template_service
    ports:
      - "18000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./services/template_service:/app

  context-adapter:
    build: ./services/context_adapter
    env_file:
      - ${PWD}/infra/.env
    ports:
      - "8010:8010"
    environment:
      - MQTT_HOST=mqtt
      - KEYCLOAK_URL=http://keycloak:18080
      - KEYCLOAK_REALM=smartport
      - CONTEXT_ADAPTER_SECRET=${CONTEXT_ADAPTER_SECRET}
    depends_on:
      - mosquitto

  dashboard:
    build: ./ui/dashboard
    ports:
      - "5173:80"
    depends_on:
      - context-adapter

  postgres:
    image: timescale/timescaledb-ha:pg16
    env_file:
      - ${PWD}/infra/.env
    ports:
      - "15432:5432"
    environment:
      - POSTGRES_USER=smartport
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=smartport
    volumes:
      - pgdata:/var/lib/postgresql/data

  mosquitto:
    image: eclipse-mosquitto:2
    container_name: mqtt
    env_file:
      - ${PWD}/infra/.env
    ports:
      - "1883:1883"
    volumes:
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log

  timeseries:
    build: ./services/timeseries
    env_file:
      - ${PWD}/infra/.env
    depends_on:
      - postgres
      - mosquitto
    environment:
      - PGHOST=postgres
      - PGUSER=postgres
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PGDATABASE=postgres
      - MQTT_HOST=mqtt
      - MQTT_PORT=1883
      - KEYCLOAK_URL=http://keycloak:18080
      - KEYCLOAK_REALM=smartport
      - TIMESERIES_SECRET=${TIMESERIES_SECRET}
    ports:
      - "8020:8020"

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    env_file:
      - ${PWD}/infra/.env
    command: start-dev
    ports:
      - "18080:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KEYCLOAK_IMPORT=/opt/keycloak/data/import/realm.json
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./infra/keycloak/realm.json:/opt/keycloak/data/import/realm.json:ro

  wiremock:
    image: wiremock/wiremock:3.3.1
    env_file:
      - ${PWD}/infra/.env
    ports:
      - "9080:8080"
    volumes:
      - wiremock_data:/home/wiremock

  redis:
    image: redis:7-alpine
    env_file:
      - ${PWD}/infra/.env
    ports:
      - "6379:6379"

  twin-core:
    build: ./services/twin_core
    env_file:
      - ${PWD}/infra/.env
    ports:
      - "8030:8030"
    environment:
      - WS_ENDPOINT=ws://context-adapter:8010
      - REDIS_HOST=redis
      - KEYCLOAK_URL=http://keycloak:18080
      - KEYCLOAK_REALM=smartport
      - TWIN_CORE_SECRET=${TWIN_CORE_SECRET}
    depends_on:
      - redis
      - context-adapter

  traefik:
    image: traefik:v2.11
    env_file:
      - ${PWD}/infra/.env
    command:
      - --providers.file.filename=/etc/traefik/traefik.yml
    ports:
      - "8443:443"
      - "8081:8081"
    volumes:
      - ./infra/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./infra/traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
      - ./infra/traefik/certs:/certs:ro
    depends_on:
      - context-adapter
      - twin-core
      - timeseries
      - dashboard

  prometheus:
    image: prom/prometheus:v2.49.1
    env_file:
      - ${PWD}/infra/.env
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "19090:9090"
    depends_on:
      - context-adapter
      - timeseries
      - twin-core

  grafana:
    image: grafana/grafana:11.0.0
    env_file:
      - ${PWD}/infra/.env
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=smartport
    volumes:
      - ./infra/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus

volumes:
  pgdata:
  mosquitto_data:
  mosquitto_log:
  keycloak_data:
  wiremock_data:
